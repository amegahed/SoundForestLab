/******************************************************************************\
|                                                                              |
|                              _plate-glass.scss                               |
|                                                                              |
|******************************************************************************|
|                                                                              |
|        This defines the dom and svg visual styles for this application.      |
|                                                                              |
|        Author(s): Abe Megahed                                                |
|                                                                              |
|        This file is subject to the terms and conditions defined in           |
|        'LICENSE.txt', which is part of this source code distribution.        |
|                                                                              |
|******************************************************************************|
|        Copyright (C) 2016-2023, Megahed Labs LLC, www.sharedigm.com          |
\******************************************************************************/

@use "../../colors/colors";

//
// variables
//

$opacity: 75%;
$max-opacity: 75%;

//
// mixins
//

@mixin shade($color: white, $opacity: $opacity, $max-opacity: $max-opacity) {
	background:

		// specular
		//
		linear-gradient(to bottom,
			colors.fade($color, $max-opacity) 0%,
			transparent 100%) no-repeat,

		// diffuse
		//
		colors.fade($color, $opacity);
}

@mixin multilayer-shade($color: white, $opacity: $opacity, $max-opacity: $max-opacity) {
	position: relative;
	overflow: hidden;

	background:

		// diffuse
		//
		colors.fade($color, $opacity);

	&:after {
		position: absolute;
		content: '';
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		pointer-events: none;

		background:

			// specular
			//
			linear-gradient(to bottom,
				colors.fade($color, $max-opacity) 0%,
				transparent 100%) no-repeat;
	}
}

//
// color mixins
//

@mixin shaded($color: white, $opacity: $opacity, $max-opacity: $max-opacity) {
	background:

		// specular
		//
		linear-gradient(to bottom,
			colors.faded($color, $max-opacity) 0%,
			transparent 100%) no-repeat,

		// diffuse
		//
		colors.faded($color, $opacity);
}

@mixin multilayer-shaded($color: white, $opacity: $opacity, $max-opacity: $max-opacity) {
	position: relative;
	overflow: hidden;

	background:

		// diffuse
		//
		colors.faded($color, $opacity);

	&:after {
		position: absolute;
		content: '';
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		pointer-events: none;

		background:

			// specular
			//
			linear-gradient(to bottom,
				colors.faded($color, $max-opacity) 0%,
				transparent 100%) no-repeat;
	}
}